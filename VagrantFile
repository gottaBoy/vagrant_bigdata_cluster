# -*- mode: ruby -*-
# vi: set ft=ruby :

#
# build centos
#
Vagrant.configure("2") do |config|
        numNodes = 3
        nodeRange = 1..3
        (nodeRange.first).upto(nodeRange.last).each do |i|
        # 复制相应的依赖文件
        config.vm.provision "file", source: "./resources/", destination: "/home/vagrant/vagrant_bigdata_cluster/resources" 
        config.vm.provision "file", source: "./scripts/", destination: "/home/vagrant/vagrant_bigdata_cluster/scripts" 
        config.vm.define "hdp#{i}" do |node|
        
            # 设置虚拟机的Box
            node.vm.box = "centos/7"

            # 设置虚拟机的主机名:hdp101
            node.vm.hostname="hdp10#{i}"

            # 设置虚拟机的登录名
            #node.ssh.username = "vagrant"

            # 设置虚拟机的登录密码
            #node.ssh.password = "vagrant"

            # 是否通过公私钥来登录虚拟机，默认为true,如果为True,可能会出现一直Warning: Authentication failure. Retrying...  
            node.ssh.insert_key = false  
            # 设置虚拟机的IP
            node.vm.network "private_network", ip: "192.168.10.#{100+i}"

            # 设置主机与虚拟机的共享目录
            # node.vm.synced_folder "~/Desktop/share", "/home/vagrant/share"

            # VirtaulBox相关配置
            node.vm.provider "virtualbox" do |v|
                # 设置虚拟机的名称
                v.name = "hdp#{i}"
                # 设置虚拟机的内存大小  
                v.memory = 2048
                # 设置虚拟机的CPU个数
                v.cpus = 1
            end

            # 使用shell脚本进行软件安装和配置
            node.vm.provision "shell",  path: "scripts/setup-init.sh"
            node.vm.provision "shell" do |s|
                s.path = "scripts/setup-hosts.sh"
                s.args = "-s #{nodeRange.first} -t #{numNodes}"
            end
            
            node.vm.provision "shell",  path: "scripts/setup-java.sh", privileged: false
            node.vm.provision "shell",  path: "scripts/setup-hadoop.sh", privileged: false
            node.vm.provision "shell" do |s|
                s.path = "scripts/setup-zookeeper.sh"
                s.args = "-i #{i}"
                s.privileged = false
            end
            if i == nodeRange.first
                node.vm.provision "shell" do |s|
                    s.path = "scripts/setup-sqoop.sh"
                    s.privileged = false
                end
                node.vm.provision "shell" do |s|
                    s.path = "scripts/setup-maven.sh"
                    s.privileged = false
                end
                node.vm.provision "shell" do |s|
                    s.path = "scripts/setup-hive.sh"
                    s.privileged = false
                end
                #node.vm.provision "shell" do |s|
                #    s.path = "scripts/setup-nginx.sh"
                #    s.privileged = false
                #end
                #node.vm.provision "shell" do |s|
                #    s.path = "scripts/setup-kibana.sh"
                #    s.privileged = false
                #end
                #node.vm.provision "shell" do |s|
                #    s.path = "scripts/setup-redis.sh"
                #    s.privileged = false
                #end
                #node.vm.provision "shell" do |s|
                #    s.path = "scripts/setup-canal.sh"
                #    s.privileged = false
                #end
                #node.vm.provision "shell" do |s|
                #    s.path = "scripts/setup-maxwell.sh"
                #    s.privileged = false
                #end
            end

            # node.vm.provision "shell",  path: "scripts/setup-scala.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-spark.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-kafka.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-hbase.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-phoenix.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-flume.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-flink.sh", privileged: false
            # node.vm.provision "shell",  path: "scripts/setup-es.sh", privileged: false

            if i == nodeRange.last
                node.vm.provision "shell" do |s|
                    s.path = "scripts/setup-mysql.sh"
                end
            end
            # config.vm.provision "shell", path: "init.sh", privileged: false
            # node.vm.provision "shell" do |s|
            #     s.path = "scripts/setup-ssh-create.sh"
            #     s.privileged = false
            # end
            # node.vm.provision "shell" do |s|
            #     s.path = "scripts/setup-ssh-copy.sh"
            #     s.args = "-s #{nodeRange.first} -t #{numNodes} -c #{i}"
            #     s.privileged = false
            # end
            # node.vm.provision "shell",  path: "scripts/setup-clean.sh", privileged: false
        end
    end
end 
